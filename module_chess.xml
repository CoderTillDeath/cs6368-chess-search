<?xml version="1.0" encoding="UTF-8"?>
<project name="module_chess" default="compile.module.chess">
  <dirname property="module.chess.basedir" file="${ant.file.module_chess}"/>
  
  <property name="module.jdk.home.chess" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.chess" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.chess" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.chess" value="-encoding UTF-8 -source 1.5 -target 1.5 ${compiler.args}"/>
  
  <property name="chess.output.dir" value="${module.chess.basedir}/out/production/Chess"/>
  <property name="chess.testoutput.dir" value="${module.chess.basedir}/out/test/Chess"/>
  
  <path id="chess.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="chess.module.production.classpath">
    <path refid="${module.jdk.classpath.chess}"/>
    <pathelement location="${basedir}/../../../../usr/share/java/junit.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="chess.runtime.production.module.classpath">
    <pathelement location="${chess.output.dir}"/>
    <pathelement location="${basedir}/../../../../usr/share/java/junit.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="chess.module.classpath">
    <path refid="${module.jdk.classpath.chess}"/>
    <pathelement location="${chess.output.dir}"/>
    <pathelement location="${basedir}/../../../../usr/share/java/junit.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="chess.runtime.module.classpath">
    <pathelement location="${chess.testoutput.dir}"/>
    <pathelement location="${chess.output.dir}"/>
    <pathelement location="${basedir}/../../../../usr/share/java/junit.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.chess">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.chess">
    <patternset refid="excluded.from.module.chess"/>
  </patternset>
  
  <path id="chess.module.sourcepath">
    <dirset dir="${module.chess.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="chess.module.test.sourcepath">
    <dirset dir="${module.chess.basedir}">
      <include name="tests"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.chess" depends="compile.module.chess.production,compile.module.chess.tests" description="Compile module Chess"/>
  
  <target name="compile.module.chess.production" depends="register.custom.compilers" description="Compile module Chess; production classes">
    <mkdir dir="${chess.output.dir}"/>
    <javac2 destdir="${chess.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.chess}/javac">
      <compilerarg line="${compiler.args.chess}"/>
      <bootclasspath refid="chess.module.bootclasspath"/>
      <classpath refid="chess.module.production.classpath"/>
      <src refid="chess.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.chess"/>
    </javac2>
    
    <copy todir="${chess.output.dir}">
      <fileset dir="${module.chess.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.chess.tests" depends="register.custom.compilers,compile.module.chess.production" description="compile module Chess; test classes" unless="skip.tests">
    <mkdir dir="${chess.testoutput.dir}"/>
    <javac2 destdir="${chess.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.chess}/javac">
      <compilerarg line="${compiler.args.chess}"/>
      <bootclasspath refid="chess.module.bootclasspath"/>
      <classpath refid="chess.module.classpath"/>
      <src refid="chess.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.chess"/>
    </javac2>
    
    <copy todir="${chess.testoutput.dir}">
      <fileset dir="${module.chess.basedir}/tests">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.chess" description="cleanup module">
    <delete dir="${chess.output.dir}"/>
    <delete dir="${chess.testoutput.dir}"/>
  </target>
</project>